{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/slider/index.js","src/scripts/slider/SlideInfo.js","src/scripts/utils/createMapModifiers.js","src/scripts/slider/ContainerTransformer.js","src/scripts/slider/SliderCounter.js","src/scripts/slider/Buttons.js","src/scripts/menu/index.js","src/scripts/menu/MenuController.js","src/scripts/form/index.js"],"sourcesContent":["/**\n *\n * @param {Record<string, Element>} elements\n * @param {Record<string, string>} modifiers\n *\n */ function $d5dee43f70993cad$export$5f5b0bc98acbe04a(elements, modifiers) {\n    /**\n   * @param {(element: Element, modifier: string) => any} callback\n   */ return (callback)=>{\n        const result = [];\n        for(const key in elements){\n            const element = elements[key];\n            const modifier = modifiers[key];\n            if (!element || !modifier) continue;\n            result.push(callback(element, modifier));\n        }\n        return result;\n    };\n}\n\n\nclass $9dae8a10dd84543a$export$e6347128a54492ef {\n    #elements;\n    #mapModifiers;\n    #lastIndex;\n    /**\n   *\n   * @param {Record<'currentSlide' | 'slideCount', HTMLElement>} elements\n   * @param {Record<'currentSlide' | 'slideCount', string>} modifiers\n   * @param {number} slideCount\n   */ constructor(elements, modifiers, lastIndex){\n        this.#elements = elements;\n        this.#mapModifiers = (0, $d5dee43f70993cad$export$5f5b0bc98acbe04a)(elements, modifiers);\n        this.#lastIndex = lastIndex;\n        this.#elements.slideCount.innerText = this.#formatInnerText(this.#lastIndex);\n    }\n    update(index) {\n        this.#elements.currentSlide.innerText = this.#formatInnerText(index);\n        this.#mapModifiers((element, modifier)=>{\n            if (index === this.#lastIndex) element.classList.add(modifier);\n            else element.classList.remove(modifier);\n        });\n    }\n    /**\n   *\n   * @param {number} value\n   */ #formatInnerText(value) {\n        return (value + 1).toString().padStart(2, 0);\n    }\n}\n\n\nclass $3c963e9d5913374e$export$38f24f7d4261df0 {\n    #container;\n    #slides;\n    /**\n   *\n   * @param {HTMLElement} container\n   * @param {NodeListOf<HTMLElement>} slides\n   */ constructor(container, slides){\n        this.#container = container;\n        this.#slides = slides;\n    }\n    update(value) {\n        const currentIndex = Math.min(value, this.#slides.length - 1);\n        const transformValue = this.#slides[currentIndex].offsetLeft - this.#slides[0].offsetLeft;\n        const isValidtransform = transformValue <= this.#container.scrollWidth - this.#container.clientWidth;\n        this.#container.style.transform = `translateX(-${isValidtransform ? transformValue : 0}px)`;\n    }\n}\n\n\n/**\n * @typedef SliderCounterObserver\n * @property {(value: number) => void} update\n */ class $51f2b6dae53621d7$export$1e2344b655049baf {\n    #observers;\n    #value;\n    #min;\n    #max;\n    /**\n   *\n   * @param {number} min\n   * @param {number} max\n   * @param {SliderCounterObserver[]} observers\n   */ constructor(min, max, observers){\n        this.#observers = observers;\n        this.#value = min;\n        this.#min = min;\n        this.#max = max;\n    }\n    /**\n   * @param {number} newValue\n   */ set value(newValue) {\n        this.#value = newValue <= this.#max && newValue >= this.#min ? newValue : this.#value;\n        this.#update();\n    }\n    get value() {\n        return this.#value;\n    }\n    #update() {\n        this.#observers.forEach((observer)=>observer.update(this.#value));\n    }\n}\n\n\nclass $691bd7dac6fe59af$export$665d5a662b7213f3 {\n    #buttons;\n    #lastIndex;\n    /**\n   *\n   * @param {Record<'prevBtn' | 'nextBtn', HTMLElement>} buttons\n   * @param {number} slideCount\n   */ constructor(buttons, lastIndex){\n        this.#buttons = buttons;\n        this.#lastIndex = lastIndex;\n    }\n    /**\n   *\n   * @param {number} value\n   */ update(value) {\n        if (value === this.#lastIndex) this.#buttons.nextBtn.setAttribute(\"disabled\", true);\n        else this.#buttons.nextBtn.removeAttribute(\"disabled\");\n        if (value === 0) this.#buttons.prevBtn.setAttribute(\"disabled\", true);\n        else this.#buttons.prevBtn.removeAttribute(\"disabled\");\n    }\n}\n\n\nconst $28738ddb5052be57$export$56b2c08e277f365 = ()=>{\n    const DOMElements = {\n        slides: document.querySelectorAll('[data-slider=\"slide\"]'),\n        container: document.querySelector('[data-slider=\"container\"]'),\n        nextBtn: document.querySelector('[data-slider=\"next-button\"]'),\n        prevBtn: document.querySelector('[data-slider=\"prev-button\"]'),\n        currentSlide: document.querySelector('[data-slider=\"current-slide\"]'),\n        slideCount: document.querySelector('[data-slider=\"slide-count\"]')\n    };\n    const SLIDE_INFO_MODIFIERS = {\n        currentSlide: \"features__currentSlide--max\",\n        slideCount: \"features__lastSlide--current\"\n    };\n    const lastPossibleIndex = DOMElements.slides.length - 1;\n    const containerTransformer = new (0, $3c963e9d5913374e$export$38f24f7d4261df0)(DOMElements.container, DOMElements.slides);\n    const sliderCounter = new (0, $51f2b6dae53621d7$export$1e2344b655049baf)(0, lastPossibleIndex, [\n        containerTransformer,\n        new (0, $691bd7dac6fe59af$export$665d5a662b7213f3)(DOMElements, lastPossibleIndex),\n        new (0, $9dae8a10dd84543a$export$e6347128a54492ef)(DOMElements, SLIDE_INFO_MODIFIERS, lastPossibleIndex)\n    ]);\n    sliderCounter.value = 0;\n    DOMElements.nextBtn.addEventListener(\"click\", ()=>{\n        sliderCounter.value++;\n    });\n    DOMElements.prevBtn.addEventListener(\"click\", ()=>{\n        sliderCounter.value--;\n    });\n    window.addEventListener(\"resize\", ()=>{\n        containerTransformer.update(sliderCounter.value);\n    });\n};\n\n\n\nclass $13905881c8fb9d59$export$c0716dcad1882e32 {\n    #mapModifiers;\n    /**\n   *\n   * @param {(callback: (element: Element, modifier: string) => any) => any[]} mapModifiers\n   */ constructor(mapModifiers){\n        this.#mapModifiers = mapModifiers;\n    }\n    toggle() {\n        this.#controll((isMenuOpen)=>!isMenuOpen);\n    }\n    close() {\n        this.#controll(()=>false);\n    }\n    /**\n   *\n   * @param {(isMenuOpen: boolean) => boolean} cb\n   */ #controll(cb) {\n        const containResults = this.#mapModifiers((element, modifier)=>element.classList.contains(modifier));\n        const isMenuOpen = containResults.every((value)=>value);\n        this.#mapModifiers((element, modifier)=>{\n            if (cb(isMenuOpen)) element.classList.add(modifier);\n            else element.classList.remove(modifier);\n        });\n    }\n}\n\n\nconst $b549770c9e3a4d30$export$38eaa17faae8f579 = ()=>{\n    const DOM_ELEMENTS_MODIFIER = {\n        button: \"top-bar__menu-button--active\",\n        menu: \"main-nav--active\",\n        page: \"page--menu-open\",\n        topBar: \"top-bar--active\"\n    };\n    const DOMElements = {\n        button: document.querySelector('[data-menu=\"button\"]'),\n        menu: document.querySelector('[data-menu=\"menu\"]'),\n        page: document.querySelector('[data-menu=\"page\"]'),\n        topBar: document.querySelector('[data-menu=\"top-bar\"]')\n    };\n    const mapModifiers = (0, $d5dee43f70993cad$export$5f5b0bc98acbe04a)(DOMElements, DOM_ELEMENTS_MODIFIER);\n    const menuController = new (0, $13905881c8fb9d59$export$c0716dcad1882e32)(mapModifiers);\n    DOMElements.button.addEventListener(\"click\", ()=>menuController.toggle());\n    window.addEventListener(\"resize\", ()=>menuController.close());\n    DOMElements.menu.addEventListener(\"click\", (e)=>{\n        if (e.target?.localName === \"a\") menuController.close();\n    });\n};\n\n\nconst $f509c3f41851874a$export$87c0cf8eb5a167e0 = ()=>{\n    const DOMElements = {\n        form: document.querySelector('[data-form=\"form\"]')\n    };\n    DOMElements.form.addEventListener(\"submit\", (e)=>{\n        e.preventDefault();\n        const formElements = Array.from(e.target.elements);\n        formElements.splice(formElements.length - 1, 1);\n        formElements.forEach((element)=>element.value = \"\");\n    });\n};\n\n\n\"use strict\";\n(0, $28738ddb5052be57$export$56b2c08e277f365)();\n(0, $b549770c9e3a4d30$export$38eaa17faae8f579)();\n(0, $f509c3f41851874a$export$87c0cf8eb5a167e0)();\n\n\n//# sourceMappingURL=index.974d6792.js.map\n","'use strict';\nimport { useSlider } from './slider';\nimport { useMenu } from './menu';\nimport { useForm } from './form';\n\nuseSlider();\nuseMenu();\nuseForm();\n","import { SlideInfo } from './SlideInfo';\nimport { ContainerTransformer } from './ContainerTransformer';\nimport { SliderCounter } from './SliderCounter';\nimport { Buttons } from './Buttons';\n\nexport const useSlider = () => {\n  const DOMElements = {\n    slides: document.querySelectorAll('[data-slider=\"slide\"]'),\n    container: document.querySelector('[data-slider=\"container\"]'),\n    nextBtn: document.querySelector('[data-slider=\"next-button\"]'),\n    prevBtn: document.querySelector('[data-slider=\"prev-button\"]'),\n    currentSlide: document.querySelector('[data-slider=\"current-slide\"]'),\n    slideCount: document.querySelector('[data-slider=\"slide-count\"]'),\n  };\n\n  const SLIDE_INFO_MODIFIERS = {\n    currentSlide: 'features__currentSlide--max',\n    slideCount: 'features__lastSlide--current',\n  };\n\n  const lastPossibleIndex = DOMElements.slides.length - 1;\n\n  const containerTransformer = new ContainerTransformer(\n    DOMElements.container,\n    DOMElements.slides,\n  );\n\n  const sliderCounter = new SliderCounter(0, lastPossibleIndex, [\n    containerTransformer,\n    new Buttons(DOMElements, lastPossibleIndex),\n    new SlideInfo(DOMElements, SLIDE_INFO_MODIFIERS, lastPossibleIndex),\n  ]);\n\n  sliderCounter.value = 0;\n\n  DOMElements.nextBtn.addEventListener('click', () => {\n    sliderCounter.value++;\n  });\n\n  DOMElements.prevBtn.addEventListener('click', () => {\n    sliderCounter.value--;\n  });\n\n  window.addEventListener('resize', () => {\n    containerTransformer.update(sliderCounter.value);\n  });\n};\n","import { createMapModifiers } from '../utils/createMapModifiers';\n\nexport class SlideInfo {\n  #elements;\n  #mapModifiers;\n  #lastIndex;\n  /**\n   *\n   * @param {Record<'currentSlide' | 'slideCount', HTMLElement>} elements\n   * @param {Record<'currentSlide' | 'slideCount', string>} modifiers\n   * @param {number} slideCount\n   */\n  constructor(elements, modifiers, lastIndex) {\n    this.#elements = elements;\n    this.#mapModifiers = createMapModifiers(elements, modifiers);\n    this.#lastIndex = lastIndex;\n\n    this.#elements.slideCount.innerText = this.#formatInnerText(\n      this.#lastIndex,\n    );\n  }\n\n  update(index) {\n    this.#elements.currentSlide.innerText = this.#formatInnerText(index);\n\n    this.#mapModifiers((element, modifier) => {\n      if (index === this.#lastIndex) {\n        element.classList.add(modifier);\n      } else {\n        element.classList.remove(modifier);\n      }\n    });\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  #formatInnerText(value) {\n    return (value + 1).toString().padStart(2, 0);\n  }\n}\n","/**\n *\n * @param {Record<string, Element>} elements\n * @param {Record<string, string>} modifiers\n *\n */\n\nexport function createMapModifiers(elements, modifiers) {\n  /**\n   * @param {(element: Element, modifier: string) => any} callback\n   */\n  return (callback) => {\n    const result = [];\n\n    for (const key in elements) {\n      const element = elements[key];\n      const modifier = modifiers[key];\n\n      if (!element || !modifier) continue;\n\n      result.push(callback(element, modifier));\n    }\n    return result;\n  };\n}\n","export class ContainerTransformer {\n  #container;\n  #slides;\n  /**\n   *\n   * @param {HTMLElement} container\n   * @param {NodeListOf<HTMLElement>} slides\n   */\n  constructor(container, slides) {\n    this.#container = container;\n    this.#slides = slides;\n  }\n\n  update(value) {\n    const currentIndex = Math.min(value, this.#slides.length - 1);\n    const transformValue =\n      this.#slides[currentIndex].offsetLeft - this.#slides[0].offsetLeft;\n    const isValidtransform =\n      transformValue <=\n      this.#container.scrollWidth - this.#container.clientWidth;\n\n    this.#container.style.transform = `translateX(-${isValidtransform ? transformValue : 0}px)`;\n  }\n}\n","/**\n * @typedef SliderCounterObserver\n * @property {(value: number) => void} update\n */\n\nexport class SliderCounter {\n  #observers;\n  #value;\n  #min;\n  #max;\n\n  /**\n   *\n   * @param {number} min\n   * @param {number} max\n   * @param {SliderCounterObserver[]} observers\n   */\n\n  constructor(min, max, observers) {\n    this.#observers = observers;\n    this.#value = min;\n    this.#min = min;\n    this.#max = max;\n  }\n\n  /**\n   * @param {number} newValue\n   */\n  set value(newValue) {\n    this.#value =\n      newValue <= this.#max && newValue >= this.#min ? newValue : this.#value;\n\n    this.#update();\n  }\n\n  get value() {\n    return this.#value;\n  }\n\n  #update() {\n    this.#observers.forEach((observer) => observer.update(this.#value));\n  }\n}\n","export class Buttons {\n  #buttons;\n  #lastIndex;\n\n  /**\n   *\n   * @param {Record<'prevBtn' | 'nextBtn', HTMLElement>} buttons\n   * @param {number} slideCount\n   */\n  constructor(buttons, lastIndex) {\n    this.#buttons = buttons;\n    this.#lastIndex = lastIndex;\n  }\n  /**\n   *\n   * @param {number} value\n   */\n  update(value) {\n    if (value === this.#lastIndex) {\n      this.#buttons.nextBtn.setAttribute('disabled', true);\n    } else {\n      this.#buttons.nextBtn.removeAttribute('disabled');\n    }\n    if (value === 0) {\n      this.#buttons.prevBtn.setAttribute('disabled', true);\n    } else {\n      this.#buttons.prevBtn.removeAttribute('disabled');\n    }\n  }\n}\n","import { createMapModifiers } from '../utils/createMapModifiers';\nimport { MenuController } from './MenuController';\n\nexport const useMenu = () => {\n  const DOM_ELEMENTS_MODIFIER = {\n    button: 'top-bar__menu-button--active',\n    menu: 'main-nav--active',\n    page: 'page--menu-open',\n    topBar: 'top-bar--active',\n  };\n\n  const DOMElements = {\n    button: document.querySelector('[data-menu=\"button\"]'),\n    menu: document.querySelector('[data-menu=\"menu\"]'),\n    page: document.querySelector('[data-menu=\"page\"]'),\n    topBar: document.querySelector('[data-menu=\"top-bar\"]'),\n  };\n\n  const mapModifiers = createMapModifiers(DOMElements, DOM_ELEMENTS_MODIFIER);\n  const menuController = new MenuController(mapModifiers);\n\n  DOMElements.button.addEventListener('click', () => menuController.toggle());\n  window.addEventListener('resize', () => menuController.close());\n\n  DOMElements.menu.addEventListener('click', (e) => {\n    if (e.target?.localName === 'a') {\n      menuController.close();\n    }\n  });\n};\n","export class MenuController {\n  #mapModifiers;\n\n  /**\n   *\n   * @param {(callback: (element: Element, modifier: string) => any) => any[]} mapModifiers\n   */\n  constructor(mapModifiers) {\n    this.#mapModifiers = mapModifiers;\n  }\n\n  toggle() {\n    this.#controll((isMenuOpen) => !isMenuOpen);\n  }\n\n  close() {\n    this.#controll(() => false);\n  }\n\n  /**\n   *\n   * @param {(isMenuOpen: boolean) => boolean} cb\n   */\n  #controll(cb) {\n    const containResults = this.#mapModifiers((element, modifier) =>\n      element.classList.contains(modifier),\n    );\n    const isMenuOpen = containResults.every((value) => value);\n\n    this.#mapModifiers((element, modifier) => {\n      if (cb(isMenuOpen)) {\n        element.classList.add(modifier);\n      } else {\n        element.classList.remove(modifier);\n      }\n    });\n  }\n}\n","export const useForm = () => {\n  const DOMElements = {\n    form: document.querySelector('[data-form=\"form\"]'),\n  };\n\n  DOMElements.form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const formElements = Array.from(e.target.elements);\n\n    formElements.splice(formElements.length - 1, 1);\n\n    formElements.forEach((element) => (element.value = ''));\n  });\n};\n"],"names":["$d5dee43f70993cad$export$5f5b0bc98acbe04a","elements","modifiers","callback","result","key","element","modifier","push","$9dae8a10dd84543a$export$e6347128a54492ef","mapModifiers","lastIndex","constructor","slideCount","innerText","formatInnerText","update","index","currentSlide","classList","add","remove","value","toString","padStart","$3c963e9d5913374e$export$38f24f7d4261df0","container","slides","currentIndex","Math","min","length","transformValue","offsetLeft","isValidtransform","scrollWidth","clientWidth","style","transform","$51f2b6dae53621d7$export$1e2344b655049baf","observers","max","newValue","forEach","observer","$691bd7dac6fe59af$export$665d5a662b7213f3","buttons","nextBtn","setAttribute","removeAttribute","prevBtn","$13905881c8fb9d59$export$c0716dcad1882e32","toggle","controll","isMenuOpen","close","cb","containResults","contains","every","DOMElements","document","querySelectorAll","querySelector","lastPossibleIndex","containerTransformer","sliderCounter","addEventListener","window","button","menu","page","topBar","menuController","e","target","localName","form","preventDefault","formElements","Array","from","splice"],"version":3,"file":"index.974d6792.js.map"}